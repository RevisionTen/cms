{% extends ['bootstrap_4_layout.html.twig'] %}

{% block form_help -%}
    {%- if help is not empty -%}
        {% set help_attr = help_attr is defined ? help_attr : {} %}
        {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' form-text text-muted')|trim}) -%}
        <small id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
            {%- if translation_domain is same as(false) -%}
                {{- help|raw -}}
            {%- else -%}
                {{- help|trans({}, translation_domain)|raw -}}
            {%- endif -%}
        </small>
    {%- endif -%}
{%- endblock form_help %}

{% block choice_widget_expanded %}
    <div {{ block('widget_container_attributes') }}>
        {% for group_label, choice in choices %}
            {%- if choice is iterable -%}
                {# Grouped expanded choices #}
                <fieldset>
                    <legend>
                        {{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}
                    </legend>
                    {% for key, choice in choice.choices %}
                        {{- form_widget(form[key], {
                            parent_label_class: label_attr.class|default(''),
                            translation_domain: choice_translation_domain,
                            valid: valid,
                        }) -}}
                    {% endfor %}
                </fieldset>
            {%- else -%}
                {{- form_widget(form[group_label], {
                    parent_label_class: label_attr.class|default(''),
                    translation_domain: choice_translation_domain,
                    valid: valid,
                }) -}}
            {%- endif -%}
        {% endfor %}
    </div>
{% endblock %}

{% block cms_opening_hours_specification_widget -%}
    {{- block('cms_shift_buttons') -}}

    {% if compound %}
        <div {{ block('widget_container_attributes') }}>
            {%- if form is rootform -%}
                {{ form_errors(form) }}
            {%- endif -%}

            <div class="form-row">
                <div class="col">
                    {{ form_row(form.dayOfWeek) }}
                </div>
                <div class="col">
                    <div class="form-row">
                        <div class="col">
                            {{ form_row(form.opens) }}
                        </div>
                        <div class="col">
                            {{ form_row(form.closes) }}
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col">
                            {{ form_row(form.validFrom) }}
                        </div>
                        <div class="col">
                            {{ form_row(form.validThrough) }}
                        </div>
                    </div>
                </div>
            </div>

            {{- block('form_rows') -}}

            {{- form_rest(form) -}}
        </div>
    {% else %}
        {{- block('form_widget_simple') -}}
    {% endif %}
{%- endblock cms_opening_hours_specification_widget %}

{% block cms_ckeditor_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control ckeditor')|trim}) %}
    {% set attr = attr|merge({'data-config': config|json_encode}) %}
    {{- block('textarea_widget') -}}
{%- endblock cms_ckeditor_widget %}

{%- block cms_trix_widget -%}
    <div class="w-100">
        {%- set type = type|default('hidden') -%}
        {{ block('form_widget_simple') }}
        <trix-editor input="{{ id }}"></trix-editor>
    </div>
{%- endblock cms_trix_widget -%}

{% block cms_upload_widget %}
    {% set file = value.file ?? null %}
    {% if file and file is not iterable %}
        {% if file|slice(-4) in ['jpeg', '.jpg', '.png', '.gif', '.svg'] %}
            <a href="{{ file }}">
                <img style="max-width: 200px;" class="rounded img-thumbnail h-auto pb-3" src="{{ file }}">
            </a>
        {% else %}
            <a href="{{ file }}">{{ file }}</a>
        {% endif %}
    {% endif %}
    {{ block('form_widget') }}
{% endblock cms_upload_widget %}

{% block cms_managed_upload_widget %}
    {% set file = (value.file is defined and value.file) ? value.file : value %}
    {% set hasFile = file and file.uuid is defined and file.path is defined %}

    {% if enable_title and form.title is defined %}
        {{ form_row(form.title) }}
    {% endif %}

    {% if hasFile %}
        <div class="w-100 bg-white border-light rounded p-3">
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        {% if file.mimeType in ['image/jpeg', 'image/png', 'image/gif'] %}
                            <a class="d-block w-100" href="{{ file.path }}" target="_blank">
                                <img class="d-block w-100 h-auto" src="{{ web_image(file.path).cropResize(200, 200) }}">
                            </a>
                            <div class="text-muted">
                                {{ file.mimeType }} {{ file.size ? ((file.size / 1000)|number_format(2)) ~ ' KB' : '' }}
                            </div>
                        {% else %}
                            <a href="{{ file.path }}" target="_blank">{{ value.title is defined and value.title ? value.title : file.path }}</a>
                        {% endif %}
                    </div>
                </div>
                <div class="col-8">
                    {{ block('form_widget') }}
                </div>
            </div>
        </div>
    {% elseif enable_chooser %}
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="nav-item"><a class="nav-link active bg-white" href="#file_upload" aria-controls="file_upload" role="tab" aria-expanded="true" data-toggle="tab">{{ 'Upload File'|trans }}</a></li>
            <li role="presentation" class="nav-item"><a class="nav-link bg-white" href="#file_chooser" aria-controls="file_chooser" role="tab" data-toggle="tab">{{ 'Choose File'|trans }}</a></li>
        </ul>
        <div class="tab-content bg-white p-3">
            <div role="tabpanel" class="tab-pane active" id="file_upload">
                {{ form_row(form.file) }}
            </div>
            <div role="tabpanel" class="tab-pane" id="file_chooser">
                {{ form_row(form.existingFileUuid) }}
                {{ form_row(form.existingFileVersion) }}
                {{ render(controller('RevisionTen\\CMS\\Controller\\FileController::files')) }}
            </div>
        </div>
        {{ block('form_widget') }}
    {% else %}
        {{ form_row(form.file) }}
        {{ block('form_widget') }}
    {% endif %}
{% endblock cms_managed_upload_widget %}

{% block cms_shift_buttons %}
    {% if form.parent.vars.allow_delete|default(false) %}
        {% set shift_item_up_javascript %}
            $(function() {
                if (event.preventDefault) event.preventDefault(); else event.returnValue = false;

                var containerDiv = $('#{{ id }}').parents('.form-group:first');
                var parentDiv = containerDiv.parents('[data-prototype]:first');

                /* Shift item up */
                containerDiv.insertBefore(containerDiv.prev());

                /* Update index of all collection items */
                parentDiv.children().each(function() {
                    var index = $(this).index();
                    $(this).find('[name]').each(function() {
                        var input = $(this);
                        var newName = input.attr('name').replace(/\[(\d+)\]/, '['+index+']');
                        input.attr('name', newName);
                    });
                });
            });
        {% endset %}
        {% set shift_item_down_javascript %}
            $(function() {
                if (event.preventDefault) event.preventDefault(); else event.returnValue = false;

                var containerDiv = $('#{{ id }}').parents('.form-group:first');
                var parentDiv = containerDiv.parents('[data-prototype]:first');

                /* Shift item down */
                containerDiv.insertAfter(containerDiv.next());

                /* Update index of all collection items */
                parentDiv.children().each(function() {
                    var index = $(this).index();
                    $(this).find('[name]').each(function() {
                        var input = $(this);
                        var newName = input.attr('name').replace(/\[(\d+)\]/, '['+index+']');
                        input.attr('name', newName);
                    });
                });
            });
        {% endset %}
        {% set remove_item_javascript %}
            $(function() {
                if (event.preventDefault) event.preventDefault(); else event.returnValue = false;

                var containerDiv = $('#{{ id }}').parents('.form-group:first');
                var parentDiv = containerDiv.parents('[data-prototype]:first');
                containerDiv.remove();
                parentDiv.trigger('easyadmin.collection.item-deleted');

                var hasCountAttr = parentDiv.data('count');

                if (hasCountAttr === undefined) {
                    var numItems = parentDiv.children('div.form-group').length;
                    parentDiv.data('count', ++numItems)
                }

                if (0 == parentDiv.children().length && 'undefined' !== parentDiv.attr('data-empty-collection')) {
                    $(parentDiv.attr('data-empty-collection')).insertBefore(parentDiv);
                }
            });
        {% endset %}
        <div class="text-right field-collection-item-action">
            <span title="{{ 'Shift up'|trans() }}" onclick="{{ shift_item_up_javascript|raw }}" class="btn btn-sm">
                <i class="fas fa-arrow-circle-up"></i>
            </span>
            <span title="{{ 'Shift down'|trans() }}" onclick="{{ shift_item_down_javascript|raw }}" class="btn btn-sm">
                <i class="fas fa-arrow-circle-down"></i>
            </span>
            <span title="{{ 'action.remove_item'|trans({}, 'EasyAdminBundle') }}" onclick="{{ remove_item_javascript|raw }}" class="btn btn-sm text-danger">
                <i class="fas fa-times-circle"></i>
            </span>
        </div>
    {% endif %}
{% endblock cms_shift_buttons %}

{% block form_widget %}
    {{- block('cms_shift_buttons') -}}

    {% if compound %}
        {{- block('form_widget_compound') -}}
    {% else %}
        {{- block('form_widget_simple') -}}
    {% endif %}
{% endblock form_widget %}

{% block cms_spacing_widget %}
    {{- block('cms_shift_buttons') -}}
    <div id="{{ form.vars.id }}">
        <div class="row justify-content-center">
            <div class="col-4">
                <div class="w-100">
                    {{ form_widget(form.top) }}
                </div>
            </div>
        </div>
        <div class="row justify-content-between">
            <div class="col-4">
                <div class="w-100">
                    {{ form_widget(form.left) }}
                </div>
            </div>
            <div class="col-4">
                <div class="w-100">
                    {{ form_widget(form.breakpoint) }}
                </div>
            </div>
            <div class="col-4">
                <div class="w-100">
                    {{ form_widget(form.right) }}
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-4">
                <div class="w-100">
                    {{ form_widget(form.bottom) }}
                </div>
            </div>
        </div>
    </div>
{% endblock cms_spacing_widget %}

{% block collection_row %}
    {{ block('form_row') }}

    {% if allow_add|default(false) %}
        {% set js_add_item %}
            $(function() {
                event.preventDefault();

                var collection = $('#{{ id }}');
                // Use a counter to avoid having the same index more than once
                var numItems = collection.data('count') || collection.children('.form-group').length;

                collection.prev('.collection-empty').remove();

                var newItem = collection.attr('data-prototype')
                    .replace(/\>{{ prototype.vars.name }}label__\</g, '>' + numItems + '<')
                    .replace(/_{{ name }}_{{ prototype.vars.name }}/g, '_{{ name }}_' + numItems)
                    .replace(/{{ name }}\]\[{{ prototype.vars.name }}\]/g, '{{ name }}][' + numItems + ']')
                ;

                // Increment the counter and store it in the collection
                collection.data('count', ++numItems);

                collection.append(newItem).trigger('easyadmin.collection.item-added');
            });
        {% endset %}

        <div class="text-right field-collection-action">
            <span onclick="{{ js_add_item|raw }}" class="btn btn-secondary">
                <i class="fa fa-plus-square"></i>
                {{ (form|length == 0 ? 'action.add_new_item' : 'action.add_another_item')|trans({}, 'EasyAdminBundle') }}
            </span>
        </div>
    {% endif %}
{% endblock collection_row %}

{% block checkbox_radio_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
        {% set is_parent_custom = parent_label_class is defined and ('checkbox-custom' in parent_label_class or 'radio-custom' in parent_label_class) %}
        {% set is_custom = label_attr.class is defined and ('checkbox-custom' in label_attr.class or 'radio-custom' in label_attr.class) %}
        {%- if is_parent_custom or is_custom -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) -%}
        {%- else %}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' form-check-label')|trim}) -%}
        {%- endif %}
        {%- if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {%- if required -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) -%}
        {%- endif -%}
        {%- if parent_label_class is defined -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': ''})|trim}) -%}
        {%- endif -%}
        {%- if label is not same as(false) and label is empty -%}
            {%- if label_format is not empty -%}
                {%- set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) -%}
            {%- else -%}
                {%- set label = name|humanize -%}
            {%- endif -%}
        {%- endif -%}

        {{ widget|raw }}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {{- label is not same as(false) ? (translation_domain is same as(false) ? label : label|trans({}, translation_domain))|raw -}}
        {{- form_errors(form) -}}
        </label>
    {%- endif -%}
{%- endblock checkbox_radio_label %}
