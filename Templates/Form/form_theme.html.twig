{% extends ['bootstrap_3_layout.html.twig'] %}

{#% use 'bootstrap_4_layout.html.twig' %#}

{% block upload_widget %}
    {% set file = (value.file is defined and value.file) ? value.file : value %}
    {% if file %}
        <img class="img-responsive" src="{{ file }}" style="margin-bottom: 1em;">
        {{ block('form_widget') }}
    {% else %}
        {{ block('form_widget') }}
    {% endif %}
{% endblock upload_widget %}

{% block managed_upload_widget %}
    {% set file = (value.file is defined and value.file) ? value.file : value %}
    {% if file and file.uuid is defined and file.path is defined %}
        <p>
            <a href="{{ file.path }}" target="_blank">{{ value.title }}</a> ({{ file.mimeType }})
        </p>
        {{ block('form_widget') }}
    {% else %}
        {{ block('form_widget') }}
    {% endif %}
{% endblock managed_upload_widget %}

{% block form_widget %}
    {% if compound %}
        {{- block('form_widget_compound') -}}
    {% else %}
        {{- block('form_widget_simple') -}}
    {% endif %}

    {% if form.parent.vars.allow_delete|default(false) %}
        {% set remove_item_javascript %}
            $(function() {
            if (event.preventDefault) event.preventDefault(); else event.returnValue = false;

            var containerDiv = $('#{{ id }}').parents('.form-group:first');
            var parentDiv = containerDiv.parents('[data-prototype]:first');
            containerDiv.remove();
            parentDiv.trigger('easyadmin.collection.item-deleted');

            var hasCountAttr = parentDiv.data('count');

            if (hasCountAttr === undefined) {
            var numItems = parentDiv.children('div.form-group').length;
            parentDiv.data('count', ++numItems)
            }

            if (0 == parentDiv.children().length && 'undefined' !== parentDiv.attr('data-empty-collection')) {
            $(parentDiv.attr('data-empty-collection')).insertBefore(parentDiv);
            }
            });
        {% endset %}

        <div class="text-right field-collection-item-action">
            <a href="#" onclick="{{ remove_item_javascript|raw }}" class="text-danger">
                <i class="fas fa-trash"></i>
                {{ 'action.remove_item'|trans({}, 'EasyAdminBundle') }}
            </a>
        </div>
    {% endif %}
{% endblock form_widget %}

{% block collection_row %}
    {{ block('form_row') }}

    {% if allow_add|default(false) %}
        {% set js_add_item %}
            $(function() {
            if (event.preventDefault) event.preventDefault(); else event.returnValue = false;

            var collection = $('#{{ id }}');
            // Use a counter to avoid having the same index more than once
            var numItems = collection.data('count') || collection.children('div.form-group').length;

            collection.prev('.collection-empty').remove();

            var newItem = collection.attr('data-prototype')
            .replace(/\>__name__label__\</g, '>' + numItems + '<')
            .replace(/_{{ name }}___name__/g, '_{{ name }}_' + numItems)
            .replace(/{{ name }}\]\[__name__\]/g, '{{ name }}][' + numItems + ']')
            ;

            // Increment the counter and store it in the collection
            collection.data('count', ++numItems);

            collection.append(newItem).trigger('easyadmin.collection.item-added');
            });
        {% endset %}

        <div class="text-right field-collection-action">
            <a href="#" onclick="{{ js_add_item|raw }}" class="text-primary">
                <i class="fa fa-plus-square"></i>
                {{ (form|length == 0 ? 'action.add_new_item' : 'action.add_another_item')|trans({}, 'EasyAdminBundle') }}
            </a>
        </div>
    {% endif %}
{% endblock collection_row %}


{% block checkbox_radio_label -%}
    {# Do not display the label if widget is not defined in order to prevent double label rendering #}
    {%- if widget is defined -%}
        {%- if required -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) -%}
        {%- endif -%}
        {%- if parent_label_class is defined -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|trim}) -%}
        {%- endif -%}
        {%- if label is not same as(false) and label is empty -%}
            {%- if label_format is not empty -%}
                {%- set label = label_format|replace({
                '%name%': name,
                '%id%': id,
                }) -%}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {{- widget|raw }} {{ label is not same as(false) ? (translation_domain is same as(false) ? label : label|trans({}, translation_domain))|raw -}}
        </label>
    {%- endif -%}
{%- endblock checkbox_radio_label %}
